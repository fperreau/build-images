---
- name: Generate configuration file '{{ DOMAIN }}/{{ CFG }}'.
  template:
    src: "{{ NAME }}/{{ CFG }}"
    dest: "{{ NAME }}/build/{{ CFG }}"
- name: Get list of domains.
  virt:
    command: list_vms
  register: domain_list
- name: Build new '{{ DOMAIN }}' image domain in {{ STORAGE }} storage.
  command: |
    virt-install --name {{ DOMAIN }} --os-variant {{ OS.kvm }} --vcpus 2 --ram 2048 \
      --disk pool={{ STORAGE }},size={{ SIZE }} --location {{ ISO }} \
      --initrd-inject {{ NAME }}/build/{{ CFG }} \
      --extra-args "inst.ks=file:/{{ CFG }}" \
      --noautoconsole
  when: not DOMAIN in domain_list.list_vms
- name: Waiting {{ DOMAIN }} domain is shutdown.
  virt: 
    name: "{{ DOMAIN }}"
    command: status
  register: result
  delay: 60
  retries: 5
  until: result.status == "shutdown"
- name: Get '{{ DOMAIN }}' disk image file.
  shell: virsh vol-list {{ STORAGE }} | grep {{ DOMAIN }} | awk '{print $2}'
  register: result
- name: Sparsify and compress '{{ DOMAIN }}' image domain to build repository.
  shell: virt-sparsify -x -v --compress {{ result.stdout }} {{ NAME }}/build/{{ NAME }}.img
  args:
    creates: "{{ NAME }}/build/{{ NAME }}.img"
